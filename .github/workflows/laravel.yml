name: Laravel CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug
      
      - name: Copy .env
        run: cp .env.example .env
      
      - name: Configure Database
        run: |
          sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=laravel_test/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env
      
      - name: Install PHP Dependencies
        run: composer install --no-interaction --no-progress
      
      - name: Generate key
        run: php artisan key:generate
      
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      
      - name: Run Migrations
        run: php artisan migrate --seed --force
      
      - name: Install NPM Dependencies
        run: npm ci
      
      - name: Build Assets
        run: npm run build
      
      - name: Run Tests
        run: php artisan test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      
      - name: Deploy to VPS
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /var/www/laravel-app
            
            # Clone repository if it doesn't exist
            if [ ! -d .git ]; then
              git clone ${{ github.server_url }}/${{ github.repository }} .
            else
              git fetch --all
              git reset --hard origin/$(echo ${{ github.ref }} | sed 's|refs/heads/||')
            fi
            
            if [ ! -f .env ]; then
              cp .env.example .env
              sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env
              sed -i 's/DB_HOST=.*/DB_HOST=db/' .env
              sed -i 's/DB_DATABASE=.*/DB_DATABASE=laravel/' .env
              sed -i 's/DB_USERNAME=.*/DB_USERNAME=laravel/' .env
              sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=secret/' .env
            fi
            
            # Create nginx directory if it doesn't exist
            mkdir -p nginx
            
            # Make sure permissions are correct
            chmod -R 775 storage bootstrap/cache
            
            # Build and start containers
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d
            
            # Set up application
            docker-compose exec -T app php artisan migrate --force
            docker-compose exec -T app php artisan config:cache
            docker-compose exec -T app php artisan route:cache
            docker-compose exec -T app php artisan view:cache
          EOF
